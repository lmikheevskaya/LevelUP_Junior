http://xydan.livejournal.com/8595.html
//std::condition_variable
/*
нужно, чтобы поток ожидал наступления некого события. Один из вариантов реализации - регулярно в цикле проверять 
условие наступления события, но это не эффективно, так как поток, вместо того, чтобы спать до наступления нужного 
момента, постоянно спрашивает о статусе, тем самым, мешая другим потокам.

std::condition_variable - это объект синхронизации, предназначенный для блокирования одного потока, пока он не 
будет оповещен о наступлении некоего события из другого.
*/
#include <iostream>
#include <vector>
#include <thread>

std::vector<int> data;
std::condition_variable data_cond;
std::mutex m;

void thread_func1()
{
	std::unique_lock<std::mutex> lock(m);
	data.push_back(10);
	data_cond.notify_one();
}

void thread_func2()
{
	std::unique_lock<std::mutex> lock(m);
	data_cond.wait(lock, [] {
		return !data.empty();
	});
	std::cout << data.back() << std::endl;
}

int main()
{
	std::thread th1(thread_func1);
	std::thread th2(thread_func2);
	th1.join();
	th2.join();
}
